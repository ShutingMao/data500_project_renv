row.names = FALSE
)
# **2. Discharge Status Counts and Proportions**
# Create contingency table
discharge_status_counts <- table(data$arm, data$discharged2)
discharge_status_proportions <- prop.table(discharge_status_counts, 1)
# Save Discharge Status Table
write.csv(
as.data.frame.matrix(discharge_status_counts),
here::here("output", "discharge_status_counts.csv"),
row.names = TRUE
)
# **3. Visualizations**
# Box plot for days_stable
ggplot(data, aes(x = arm, y = days_stable, fill = arm)) +
geom_boxplot() +
labs(
title = "Days to Stabilization by Intervention Group",
x = "Intervention Group",
y = "Days to Stabilization"
) +
theme_minimal()
ggsave(
filename = here::here("output", "days_stable_boxplot.png"),
plot = plot,
width = 7,
height = 7
)
library(ggplot2)
library(here)
here::i_am("src/analysis_outcome1.R")
# Load data
data <- read.csv(here::here("data", "f75_interim.csv"))
data$arm<- factor(
data$arm
)
data$discharge_status <- factor(
data$discharged2,
levels = c(0, 1),
labels = c("No", "Yes")
)
length(data$days_stable)
length(data$arm)
# **1. Median Days to Stabilization and Statistical Comparison**
# Calculate group-wise median and IQR
# Calculate group-wise median and IQR for days_stable
days_stable_summary <- aggregate(
days_stable ~ arm,
data = data,
FUN = function(x) c(median = median(x, na.rm = TRUE), iqr = IQR(x, na.rm = TRUE))
)
days_stable_summary <- do.call(data.frame, days_stable_summary)
colnames(days_stable_summary) <- c("intervention_group", "median_days", "iqr_days")
days_stable_summary
# Perform Mann-Whitney U Test
mann_whitney_test <- wilcox.test(
days_stable ~ arm,
data = data
)
write.csv(
days_stable_summary,
here::here("output", "days_stable_summary.csv"),
row.names = FALSE
)
# **2. Discharge Status Counts and Proportions**
# Create contingency table
discharge_status_counts <- table(data$arm, data$discharged2)
discharge_status_proportions <- prop.table(discharge_status_counts, 1)
# Save Discharge Status Table
write.csv(
as.data.frame.matrix(discharge_status_counts),
here::here("output", "discharge_status_counts.csv"),
row.names = TRUE
)
# **3. Visualizations**
# Box plot for days_stable
ggplot(data, aes(x = arm, y = days_stable, fill = arm)) +
geom_boxplot() +
labs(
title = "Days to Stabilization by Intervention Group",
x = "Intervention Group",
y = "Days to Stabilization"
) +
theme_minimal()
ggsave(
filename = here::here("output", "days_stable_boxplot.png"),
plot = plot,
width = 7,
height = 7
)
plot<-ggplot(data, aes(x = arm, y = days_stable, fill = arm)) +
geom_boxplot() +
labs(
title = "Days to Stabilization by Intervention Group",
x = "Intervention Group",
y = "Days to Stabilization"
) +
theme_minimal()
ggsave(
filename = here::here("output", "days_stable_boxplot.png"),
plot = plot,
width = 7,
height = 7
)
library(ggplot2)
library(here)
here::i_am("src/analysis_outcome1.R")
# Load data
data <- read.csv(here::here("data", "f75_interim.csv"))
data$arm<- factor(
data$arm
)
data$discharge_status <- factor(
data$discharged2,
levels = c(0, 1),
labels = c("No", "Yes")
)
length(data$days_stable)
length(data$arm)
# **1. Median Days to Stabilization and Statistical Comparison**
# Calculate group-wise median and IQR
# Calculate group-wise median and IQR for days_stable
days_stable_summary <- aggregate(
days_stable ~ arm,
data = data,
FUN = function(x) c(median = median(x, na.rm = TRUE), iqr = IQR(x, na.rm = TRUE))
)
days_stable_summary <- do.call(data.frame, days_stable_summary)
colnames(days_stable_summary) <- c("intervention_group", "median_days", "iqr_days")
days_stable_summary
# Perform Mann-Whitney U Test
mann_whitney_test <- wilcox.test(
days_stable ~ arm,
data = data
)
write.csv(
days_stable_summary,
here::here("output", "days_stable_summary.csv"),
row.names = FALSE
)
# **2. Discharge Status Counts and Proportions**
# Create contingency table
discharge_status_counts <- table(data$arm, data$discharged2)
discharge_status_proportions <- prop.table(discharge_status_counts, 1)
# Save Discharge Status Table
write.csv(
as.data.frame.matrix(discharge_status_counts),
here::here("output", "discharge_status_counts.csv"),
row.names = TRUE
)
# **3. Visualizations**
# Box plot for days_stable
plot<-ggplot(data, aes(x = arm, y = days_stable, fill = arm)) +
geom_boxplot() +
labs(
title = "Days to Stabilization by Intervention Group",
x = "Intervention Group",
y = "Days to Stabilization"
) +
theme_minimal()
ggsave(
filename = here::here("output", "days_stable_boxplot.png"),
plot = plot,
width = 7,
height = 7
)
# Bar chart for discharge outcomes
discharge_df <- as.data.frame(as.table(discharge_status_counts))
colnames(discharge_df) <- c("Group", "DischargeStatus", "Count")
ggplot(discharge_df, aes(x = Group, y = Count, fill = DischargeStatus)) +
geom_bar(stat = "identity", position = "dodge") +
labs(
title = "Discharge Outcomes by Intervention Group",
x = "Intervention Group",
y = "Count",
fill = "Discharge Status"
) +
theme_minimal() +
ggsave(here::here("output", "discharge_status_barchart.png"))
discharge_plot<-ggplot(discharge_df, aes(x = Group, y = Count, fill = DischargeStatus)) +
geom_bar(stat = "identity", position = "dodge") +
labs(
title = "Discharge Outcomes by Intervention Group",
x = "Intervention Group",
y = "Count",
fill = "Discharge Status"
) +
theme_minimal()
ggsave(
filename = here::here("output", "discharge_status_barchart.png"),
plot = discharge_plot,
width = 8,
height = 6
)
library(ggplot2)
library(here)
here::i_am("src/analysis_outcome1.R")
# Load data
data <- read.csv(here::here("data", "f75_interim.csv"))
data$arm<- factor(
data$arm
)
data$discharge_status <- factor(
data$discharged2,
levels = c(0, 1),
labels = c("No", "Yes")
)
length(data$days_stable)
length(data$arm)
# **1. Median Days to Stabilization and Statistical Comparison**
# Calculate group-wise median and IQR
# Calculate group-wise median and IQR for days_stable
days_stable_summary <- aggregate(
days_stable ~ arm,
data = data,
FUN = function(x) c(median = median(x, na.rm = TRUE), iqr = IQR(x, na.rm = TRUE))
)
days_stable_summary <- do.call(data.frame, days_stable_summary)
colnames(days_stable_summary) <- c("intervention_group", "median_days", "iqr_days")
days_stable_summary
# Perform Mann-Whitney U Test
mann_whitney_test <- wilcox.test(
days_stable ~ arm,
data = data
)
write.csv(
days_stable_summary,
here::here("output", "days_stable_summary.csv"),
row.names = FALSE
)
# **2. Discharge Status Counts and Proportions**
# Create contingency table
discharge_status_counts <- table(data$arm, data$discharged2)
discharge_status_proportions <- prop.table(discharge_status_counts, 1)
# Save Discharge Status Table
write.csv(
as.data.frame.matrix(discharge_status_counts),
here::here("output", "discharge_status_counts.csv"),
row.names = TRUE
)
# **3. Visualizations**
# Box plot for days_stable
plot<-ggplot(data, aes(x = arm, y = days_stable, fill = arm)) +
geom_boxplot() +
labs(
title = "Days to Stabilization by Intervention Group",
x = "Intervention Group",
y = "Days to Stabilization"
) +
theme_minimal()
ggsave(
filename = here::here("output", "days_stable_boxplot.png"),
plot = plot,
width = 7,
height = 7
)
# Bar chart for discharge outcomes
discharge_df <- as.data.frame(as.table(discharge_status_counts))
colnames(discharge_df) <- c("Group", "DischargeStatus", "Count")
discharge_plot<-ggplot(discharge_df, aes(x = Group, y = Count, fill = DischargeStatus)) +
geom_bar(stat = "identity", position = "dodge") +
labs(
title = "Discharge Outcomes by Intervention Group",
x = "Intervention Group",
y = "Count",
fill = "Discharge Status"
) +
theme_minimal()
ggsave(
filename = here::here("output", "discharge_status_barchart.png"),
plot = discharge_plot,
width = 8,
height = 6
)
# **4. Outputs**
# Print summaries
print("Days to Stabilization Summary:")
print(days_stable_summary)
print("Mann-Whitney U Test Results:")
print(mann_whitney_test)
print("Discharge Status Counts:")
print(discharge_status_counts)
library(ggplot2)
library(here)
here::i_am("src/analysis_outcome1.R")
# Load data
data <- read.csv(here::here("data", "f75_interim.csv"))
data$arm<- factor(
data$arm
)
data$discharge_status <- factor(
data$discharged2,
levels = c(0, 1),
labels = c("No", "Yes")
)
length(data$days_stable)
length(data$arm)
# **1. Median Days to Stabilization and Statistical Comparison**
# Calculate group-wise median and IQR
# Calculate group-wise median and IQR for days_stable
days_stable_summary <- aggregate(
days_stable ~ arm,
data = data,
FUN = function(x) c(median = median(x, na.rm = TRUE), iqr = IQR(x, na.rm = TRUE))
)
days_stable_summary <- do.call(data.frame, days_stable_summary)
colnames(days_stable_summary) <- c("intervention_group", "median_days", "iqr_days")
days_stable_summary
# Perform Mann-Whitney U Test
mann_whitney_test <- wilcox.test(
days_stable ~ arm,
data = data
)
write.csv(
days_stable_summary,
here::here("output", "days_stable_summary.csv"),
row.names = FALSE
)
# **2. Discharge Status Counts and Proportions**
# Create contingency table
discharge_status_counts <- table(data$arm, data$discharged2)
discharge_status_proportions <- prop.table(discharge_status_counts, 1)
# Save Discharge Status Table
write.csv(
as.data.frame.matrix(discharge_status_counts),
here::here("output", "discharge_status_counts.csv"),
row.names = TRUE
)
# **3. Visualizations**
# Box plot for days_stable
plot<-ggplot(data, aes(x = arm, y = days_stable, fill = arm)) +
geom_boxplot() +
labs(
title = "Days to Stabilization by Intervention Group",
x = "Intervention Group",
y = "Days to Stabilization"
) +
theme_minimal()+ ylim(0, 150)
ggsave(
filename = here::here("output", "days_stable_boxplot.png"),
plot = plot,
width = 7,
height = 7
)
# Bar chart for discharge outcomes
discharge_df <- as.data.frame(as.table(discharge_status_counts))
colnames(discharge_df) <- c("Group", "DischargeStatus", "Count")
discharge_plot<-ggplot(discharge_df, aes(x = Group, y = Count, fill = DischargeStatus)) +
geom_bar(stat = "identity", position = "dodge") +
labs(
title = "Discharge Outcomes by Intervention Group",
x = "Intervention Group",
y = "Count",
fill = "Discharge Status"
) +
theme_minimal()
ggsave(
filename = here::here("output", "discharge_status_barchart.png"),
plot = discharge_plot,
width = 8,
height = 6
)
# **4. Outputs**
# Print summaries
print("Days to Stabilization Summary:")
print(days_stable_summary)
print("Mann-Whitney U Test Results:")
print(mann_whitney_test)
print("Discharge Status Counts:")
print(discharge_status_counts)
# Load the dataset
library(survival)
load("/Users/shutingmao/Downloads/whas500.RData")
str(whas500)
summary(whas500)
head(whas500)
# Fit the Cox model, adjusting the formula as needed for your retained covariates
cox_model <- coxph(Surv(lenfol, fstat) ~ age + gender + bmi + hr + sysbp +
diasbp + cvd + afb + sho + chf + av3 + miord + mitype, data = whas500)
summary(cox_model)
hazard_ratios <- exp(cbind(HR = coef(cox_model), confint(cox_model)))
print(hazard_ratios)
knitr::opts_chunk$set(echo = TRUE)
# Load the dataset
library(survival)
load("/Users/shutingmao/Downloads/whas500.RData")
str(whas500)
summary(whas500)
head(whas500)
cox_model <- coxph(Surv(lenfol, fstat) ~ age + gender + bmi + hr + sysbp +
diasbp + cvd + afb + sho + chf + av3 + miord + mitype, data = whas500)
summary(cox_model)
hazard_ratios <- exp(cbind(HR = coef(cox_model), confint(cox_model)))
print(hazard_ratios)
#2
null_model <- coxph(Surv(lenfol, fstat) ~ 1, data = whas500)
stepwise_model <- stepAIC(
cox_model,
direction = "both",
scope = list(lower = null_model, upper = cox_model)
)
library(MASS)
# Load the dataset
library(survival)
library(MASS)
load("/Users/shutingmao/Downloads/whas500.RData")
str(whas500)
summary(whas500)
head(whas500)
# Fit the Cox model, adjusting the formula as needed for your retained covariates
cox_model <- coxph(Surv(lenfol, fstat) ~ age + gender + bmi + hr + sysbp +
diasbp + cvd + afb + sho + chf + av3 + miord + mitype, data = whas500)
summary(cox_model)
hazard_ratios <- exp(cbind(HR = coef(cox_model), confint(cox_model)))
print(hazard_ratios)
#2
null_model <- coxph(Surv(lenfol, fstat) ~ 1, data = whas500)
stepwise_model <- stepAIC(
cox_model,
direction = "both",
scope = list(lower = null_model, upper = cox_model)
)
#3
summary(stepwise_model)
martingale_residuals <- residuals(cox_model, type = "martingale")
plot(whas500$covariate, martingale_residuals)
#3
martingale_residuals <- residuals(stepwise_model, type = "martingale")
plot(whas500$covariate, martingale_residuals)
plot(whas500$gender, martingale_residuals)
plot(whas500$gender, martingale_residuals)
plot(whas500$age, martingale_residuals)
summary(stepwise_model)
plot(whas500$hr, martingale_residuals)
plot(whas500$sho, martingale_residuals)
plot(whas500$chf, martingale_residuals)
plot(whas500$age, martingale_residuals)
# Add a smoothing line to visualize potential non-linear patterns
lines(smooth.spline(whas500$age, martingale_residuals))
# 6.Test for proportional hazards assumption
ph_test <- cox.zph(cox_model)
print(ph_test)
#3
martingale_residuals <- residuals(stepwise_model)
plot(whas500$age, martingale_residuals)
ph_test <- cox.zph(cox_model)
print(ph_test)
plot(ph_test)
ph_test <- cox.zph(stepwise_model)
print(ph_test)
plot(ph_test)
print(hazard_ratios)
summary(stepwise_model)
martingale_residuals <- residuals(stepwise_model)
plot(whas500$age, martingale_residuals)
# Add a smoothing line to visualize potential non-linear patterns
lines(smooth.spline(whas500$age, martingale_residuals))
# 6.Test for proportional hazards assumption
ph_test <- cox.zph(stepwise_model)
print(ph_test)
plot(ph_test)
knitr::opts_chunk$set(echo = TRUE)
load("whas500.Rdata")
load("/Users/shutingmao/Downloads/whas500.RData")
library(survival)
full_model <- coxph(Surv(lenfol, fstat) ~ age + factor(gender) + hr + sysbp + diasbp + bmi +
factor(cvd) + factor(afb) + factor(sho) + factor(chf) + factor(av3) +
factor(miord) + factor(mitype) + factor(year) + los + factor(dstat),
data = whas500)
summary(full_model)
null_model <- coxph(Surv(lenfol, fstat) ~ 1, data = whas500)
stepwise_model <- stepAIC(
cox_model,
direction = "both",
scope = list(lower = null_model, upper = cox_model)
)
summary(stepwise_model)
martingale_residuals <- residuals(stepwise_model)
plot(whas500$age, martingale_residuals)
# Add a smoothing line to visualize potential non-linear patterns
lines(smooth.spline(whas500$age, martingale_residuals))
ph_test <- cox.zph(stepwise_model)
print(ph_test)
plot(ph_test)
hazard_ratios <- exp(cbind(HR = coef(stepwise_model), confint(stepwise_model)))
print(hazard_ratios)
ph_test <- cox.zph(stepwise_model)
print(ph_test)
plot(ph_test)
ph_test <- cox.zph(stepwise_model)
print(ph_test)
plot(ph_test，var="age")
ph_test <- cox.zph(stepwise_model)
print(ph_test)
plot(cox.zph(stepwise_model)，var="age")
scaledres <- residuals(stepwise_model,type="scaledsch")
cox.zph(final_model)
scaledres <- residuals(stepwise_model,type="scaledsch")
cox.zph(stepwise_model)
plot(cox.zph(stepwise_model)，var="age")
scaledres <- residuals(stepwise_model,type="scaledsch")
cox.zph(stepwise_model)
plot(cox.zph(stepwise_model)，var="age")
scaledres <- residuals(stepwise_model,type="scaledsch")
cox.zph(stepwise_model)
plot(cox.zph(stepwise_model),var="age")
install.packages("renv")
library("renv")
getwd()
setwd("/Users/shutingmao/Desktop/Y2S1/DATA 550 Github/collaborating_using_renv")
getwd()
renv::init()
